# we need sudo permissions when we use docker
sudo: required
language: generic
# we need a copy of docker installed
services: 
  - docker

# series of cmds that are executed before the tests are run
before_install:
  # build docker img with tagged name (repo name used here - not a must) - tag used only inside travis process 
  - docker build -t kalimero0073/docker-react -f Dockerfile.dev .

# cmds to be executed to run the test suite
# travis watches the output - when cmd return status code != 0 it assumes that sth is broken
# cmd oriented towards docker run img specific_cmd
# default npm run test cmd never exits - so we need the test suite to exit automatically when done -> -- --coverage
script:
  - docker run -e CI=true kalimero0073/docker-react npm run test -- --coverage

deploy:
  # travis will do lots of stuff automatically knowing the provider
  provider: elasticbeanstalk
  # look into elasticbean dashboard - within the link it says eu-central-1
  region: "eu-central-1"
  # specified on aws: docker-react2
  app: "docker-react2"
  # on aws unter environments
  env: "Dockerreact2-env"
  # harddrive running on aws - travis needs to know the name of the bucket to put the zip file (github repo files included) on
  # to find the bucketname on aws: type in s3 into the search bar and select S3 - this will list the buckets
  bucket_name: "elasticbeanstalk-eu-central-1-598692696233"
  # when not added manually - will be made manually by AWS taking the app name
  # to check it search bucket_name and click on it -> opens the file structure with the folders in it (incl. e.g. docker-react2 after first deploy)
  bucket_path: "docker-react2"
  # only deploy when master branch gets new code - so we can work calmly on other branches (features)
  on:
    branch: master
  # set of api acess - so that travis can access aws - search for IAM on your aws acc to find the keys
  # under users - add a new user with programmable full access
  # to not paste api key directly as the repo is public
  # use env var on travis account under more options - settings with display in logs unchecked
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY